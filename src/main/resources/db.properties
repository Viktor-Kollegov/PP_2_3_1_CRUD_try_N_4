# MySQL properties
db.driver=com.mysql.cj.jdbc.Driver
db.url=jdbc:mysql://localhost:3306/first_schema_on_local_instance?characterEncoding=UTF-8&verifyServerCertificate=false&useSSL=false&requireSSL=false&useLegacyDatetimeCode=false&amp&serverTimezone=UTC
db.username=bestuser
db.password=rootrootroot

# Hibernate properties
hibernate.show_sql=true
hibernate.hbm2ddl.auto=update
#You’re not done after you generated the table model or defined it yourself.
# You need a domain model and a table model. Both have to fit together, and you need
# to optimize them for usability and performance. That’s not easy, and it can’t be
# done in one step. There is also more than one way to achieve that. But before
# I talk about the different options, let’s quickly define the goals of the modeling
# process.

#The table model has to allow the database to store and retrieve the data as efficient as possible.
#The domain model has to be a good fit for all use cases so that they can get implemented easily and efficiently.
#The table and domain model have to fit together.
#The implementation process has to be as easy and fast as possible.

#Tomcat по умолчанию использует ISO-8859-1.
#new String(req.getParameter("name").getBytes("ISO-8859-1"), Charset.forName("UTF-8"));
#-Dfile.encoding=UTF-8