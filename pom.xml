<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ru.javamentor</groupId>
    <artifactId>spring-mvc</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <properties>
        <spring.version>5.3.23</spring.version>
    </properties>
    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm
            </artifactId> <!--import org.springframework.jdbc.datasource.DriverManagerDataSource;-->
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring5</artifactId>
            <version>3.0.15.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.6.3.Final</version>
        </dependency>
        <!-- Wrong dependencies. Are you sure you can use ORM 6 with spring 5.3? –
         Davide D'Alto
         Jun 26 at 13:31
         In HBN6 they have switched to jakarta.persistence-api-3.0.0 and now FQCN of PersistenceProvider in new persistence-api is jakarta.persistence.spi.PersistenceProvider. Basically, modern HBN6 is not compatible with spring. –
         Andrey B. Panfilov
         Jun 26 at 13:33
         Andrey, What does FQCN mean? I theorized since posting that since it keeps assuming jakarta, I am using jakarta's version of the classes now. I already had the jakarta-persistence in the maven file. But I am not sure what to do as for the code to get the results I want. –
         Seth D. Fulmer
         Jun 26 at 14:27
         David, I'm not sure but I need to use Spring -Boot and Hibernate with JPA and I don't have the luxury of using Spring-JPA repositories because the powers that be did a crappy job of organizing the DB - there's no foreign keys or anything and few if any primary keys like Id so I'm doing what I can to generate the Hibernate Queries and Entities. I just used Books to test this for myself on my personal computer but when I get it working can copy it over to my work example. –
         Seth D. Fulmer
         Jun 26 at 14:30
         FQCN - fully qualified class name. spring data expects javax.persistence.spi.PersistenceProvider, HBN6 uses jakarta.persistence.spi.PersistenceProvider. You need to switch to HBN5. –
         Andrey B. Panfilov
         Jun 26 at 14:38-->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId> <!-- Возможно это лишнее, так как ниже мы проблему обрабатываем-->
            <version>2.4.0-b180830.0359</version>
        </dependency>
        <!-- Без данной бибилиотеки анотации @Entity и прочие не работают-->
        <!-- И даже больше: -->
        <!--Caused by: java.lang.ClassNotFoundException: Main //если не очистить проект и не скомпилировать заново-->
        <!-- https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api -->
        <!-- После удаления этой зависимости, чтобы я ни делал проект не работает -->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.30</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.webjars/bootstrap -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>5.2.2</version>
        </dependency>

    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <warSourceDirectory>src/webapp</warSourceDirectory> <!--тут итак порядок-->
                        <warName>spring_mvc</warName>
                        <failOnMissingWebXml>false</failOnMissingWebXml> <!--тут итак порядок-->
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>17</source> <!--тут итак порядок-->
                    <target>17</target>
                    <compilerArgs>--enable-preview</compilerArgs>
                </configuration>
            </plugin>
        </plugins>
        <finalName>Spring_MVC</finalName>
    </build>
</project>